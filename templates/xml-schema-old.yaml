  schemas:
  {% if api.content_type == 'application/xml' %}
   {{ api.requestBody.getroot().tag }}:
    type: object
    properties:
    {% for child in api.requestBody.getroot() %}
      {% for subchild in api.requestBody.getroot().findall(child.tag) %}
      {{ subchild.tag }}:
        type: object
        properties:
        {% for attribute in subchild.attrib %}
          "{{attribute}}":
            type: string
            enum:
              - "{{subchild.get(attribute)}}"
            xml:
              attribute: true
        {% endfor %}
        {% for element in subchild %}
          {{element.tag}}:
            {% if element.attrib|length > 0 %}
            type: object
            properties:
            {% for attribute in element.attrib %}
              "{{attribute}}":
                type: string
                example: "{{element.get(attribute)}}"
                xml:
                  attribute: true
            {% endfor %}
            {% else %}
            type: string
            {% if subchild.find(element.tag).text is not none %}
            example: "{{subchild.find(element.tag).text}}"
            {% else %}
            example: ""
            {% endif %}
            {% endif %}
        {% endfor %}
      {% endfor %}
    {% endfor %}
  {% endif %}

    {% for response_code in api.responses %}
      {% for response_content_type in api.responses[response_code] %}
        {% if response_content_type == 'application/xml' %}
          {% for param in api.responses[response_code][response_content_type] %}
          {% set param = param|string_to_xml %}
   {{ param.tag }}:
    type: object
    properties:
    {% for child in param %}
      {% for subchild in param.findall(child.tag) %}
      {{ subchild.tag }}:
        type: object
        properties:
        {% for attribute in subchild.attrib %}
          "{{attribute}}":
            type: string
            enum:
              - "{{subchild.get(attribute)}}"
            xml:
              attribute: true
        {% endfor %}
        {% for element in subchild %}
          {{element.tag}}:
            {% if element.attrib|length > 0 %}
            type: object
            properties:
            {% for attribute in element.attrib %}
              "{{attribute}}":
                type: string
                example: "{{element.get(attribute)}}"
                xml:
                  attribute: true
            {% endfor %}
            {% else %}
            type: string
            {% if subchild.find(element.tag).text is not none %}
            example: "{{subchild.find(element.tag).text}}"
            {% else %}
            example: ""
            {% endif %}
            {% endif %}
        {% endfor %}
      {% endfor %}
    {% endfor %}

          {% endfor %}
        {% endif %}
      {% endfor %}
    {% endfor %}
