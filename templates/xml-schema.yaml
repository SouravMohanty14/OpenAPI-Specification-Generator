  schemas:
  {% if api.content_type == 'application/xml' %}
   {{ api.requestBody.getroot().tag }}:
    type: object
    properties:
    {% for child in api.requestBody.getroot() %}
      {% for subchild in api.requestBody.getroot().findall(child.tag) %}
      {{ subchild.tag }}:
        type: object
        properties:
        {% for attribute in subchild.attrib %}
          "{{attribute}}":
            type: string
            enum:
              - "{{subchild.get(attribute)}}"
            xml:
              attribute: true
        {% endfor %}
        {% for element in subchild %}
          {{element.tag}}:
            {% if element.attrib|length > 0 %}
            type: object
            properties:
            {% for attribute in element.attrib %}
              "{{attribute}}":
                type: string
                example: "{{element.get(attribute)}}"
                xml:
                  attribute: true
            {% endfor %}
            {% else %}
            type: string
            {% if subchild.find(element.tag).text is not none %}
            example: "{{subchild.find(element.tag).text}}"
            {% else %}
            example: ""
            {% endif %}
            {% endif %}
        {% endfor %}
      {% endfor %}
    {% endfor %}
  {% endif %}

    {% for response_code in api.responses %}
      {% for response_content_type in api.responses[response_code] %}
        {% if response_content_type == 'application/xml' %}
          {% for param in api.responses[response_code][response_content_type] %}
          {% set param = param|string_to_xml %}
    {{param.tag}}:
      type: object
      properties:
      {% set temp = child|reset_xml_tags %}
      {% for child in param %}
      {% set child_name = child.tag|get_child_name %}
          {{child_name}}:
            $ref: '#/components/schemas/{{child_name}}'
      {% endfor %}

    {% set temp = subchild|reset_xml_tags %}
    {% for child in param %}
    {% if child|child_not_present %}     
      {% for subchild in param.findall(child.tag) %}
      {% set subchild_name = subchild.tag|get_child_name %}
    {{ subchild_name }}:
      type: object
      properties:
        {% if subchild.attrib|length > 0 %}
        {% for attribute in subchild.attrib %}
        "{{attribute}}":
          type: string
          example:
            - "{{subchild.get(attribute)}}"
          xml:
                attribute: true
          {% endfor %}
        {% endif %}
        {% for element in subchild %}
            {% if element.attrib|length > 0 %}
        "{{element.tag}}":
          type: string
          example:
          {% for attribute in element.attrib %}
            - "{{attribute}}"
          xml:
                attribute: true
      
        name: '{{subchild.tag}}'
            {% endfor %}
            {% else %}
        {{element.tag}}:
            {% if subchild.find(element.tag)|child_exists %}
            type: object
            properties:
            {{"#has children"}}
            {% for nested_subchild in element %}
              "{{nested_subchild.tag}}":
              {% if element.find(nested_subchild.tag)|child_exists %}
              {{"#has sub children"}}
                type: object
                properties:
              {% for inner_nested_subchild in nested_subchild %}
                  "{{inner_nested_subchild.tag}}":
                  {% if nested_subchild.find(inner_nested_subchild.tag)|child_exists %}
                    type: object
                    properties:
                    {% for inner_inner_nested_subchild in inner_nested_subchild %}
                      "{{inner_inner_nested_subchild.tag}}":
                      {% if inner_nested_subchild.find(inner_inner_nested_subchild.tag)|child_exists %}
                        type: object
                        properties:
                        {% for inner_inner_inner_nested_subchild in inner_inner_nested_subchild %}
                          "{{inner_inner_inner_nested_subchild.tag}}":
                          {% if inner_inner_nested_subchild.find(inner_inner_inner_nested_subchild.tag)|child_exists %}
                            type: object
                            properties:
                            {% for inner_inner_inner_inner_nested_subchild in inner_inner_inner_nested_subchild %}
                              "{{inner_inner_inner_inner_nested_subchild.tag}}":
                                type: string
                                example: "{{inner_inner_inner_nested_subchild.find(inner_inner_inner_inner_nested_subchild.tag).text}}"
                              {% endfor %}
                          {% else %}
                            type: string
                            example: "{{inner_inner_nested_subchild.find(inner_inner_inner_nested_subchild.tag).text}}"
                          {% endif %}
                        {% endfor %}
                      {% else %}
                        type: string
                        example: "{{inner_nested_subchild.find(inner_inner_nested_subchild.tag).text}}"
                      {% endif %}
                    {% endfor %}
                  {% else %}
                    type: string
                    example: "{{nested_subchild.find(inner_nested_subchild.tag).text}}"
                  {% endif %}
              {% endfor %}
              {% else %}
              {{"#no sub children"}}
                    type: string
                    properties: {{{}}}
              {% endif %}
            {% endfor %}
      
            {% else %}
            {{"#no children"}}
            type: string
            example: "{{subchild.find(element.tag).text}}"
            {% endif %}
            {% endif %}
        {% endfor %}
      xml:
        wrapped: true
        name: '{{subchild.tag}}'
      {% endfor %}
    {% endif %}
    {% endfor %}

          {% endfor %}
        {% endif %}
      {% endfor %}
    {% endfor %}
